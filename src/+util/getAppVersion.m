function appVersion = getAppVersion(rootFolder, entryPointFolder, temporaryDir)

    arguments
        rootFolder       char
        entryPointFolder char
        temporaryDir     char
    end

    appName = class.Constants.appName;

    appVersion = struct('machine',     '', ...
                        'matlab',      '', ...
                        'browser',     '', ...
                        'application', struct('name', appName,                       ...
                                              'release', class.Constants.appRelease, ...
                                              'version', class.Constants.appVersion, ...
                                              'rootFolder', rootFolder,              ...
                                              'entryPointFolder',  entryPointFolder, ...
                                              'tempSessionFolder', temporaryDir),    ...
                        'database',    struct('name', 'RFDataHub'));

    if exist('ctfroot', 'file')
        appVersion.application.ctfRoot = ctfroot;
    end

    % OS
    appVersion.machine = struct('name',         'MACHINE',                                   ...
                                'platform',     ccTools.fcn.OperationSystem('platform'),     ...
                                'version',      ccTools.fcn.OperationSystem('ver'),          ...
                                'computerName', ccTools.fcn.OperationSystem('computerName'), ...
                                'userName',     ccTools.fcn.OperationSystem('userName'));

    % OpenGL
    graphRender = '';
    try
        graphRender = jsonencode(rendererinfo);
    catch
    end

    % MATLAB    
    [matVersion, matReleaseDate] = version;
    matProducts = struct2table(ver);
    appVersion.matlab = struct('name',     'MATLAB',                                                       ...
                               'version',  sprintf('%s (Release date: %s)', matVersion, matReleaseDate),   ...
                               'pid',      feature('getpid'),                                              ...
                               'rootPath', matlabroot,                                                     ...
                               'products', strjoin(matProducts.Name + " v. " + matProducts.Version, ', '), ...
                               'renderer', graphRender);

    % RFDataHub
    global RFDataHub_info
    fieldList = fieldnames(RFDataHub_info);
    for ii = 1:numel(fieldList)
        appVersion.database.(fieldList{ii}) = RFDataHub_info.(fieldList{ii});
    end
end